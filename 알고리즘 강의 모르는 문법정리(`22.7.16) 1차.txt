1. if (ture) {  xx; }
   else { xx; }

2. for( 초기화; 종료조건; 반복실행) { xx; }
   ex) for(int x; x < 10; x++)

3. next() : 통째로가 사용자가 입력한 문자열 값(엔터치기 전 공백은 포함되지 않는다.)

nextInt() : 통째로가 사용자가 입력한 정수 값

nextLine() : 통째로가 사용자가 입력한 문자열 값(엔터치기 전 공백까지 포함한다.)

nextLine()과 next()메소드의 차이는 nextLine()메소드는 Enter를 치기 전까지 쓴 문자열을 모두 리턴한다는 것이고
next() 메소드는 스페이스 즉 공백 전까지 입력받은 문자열을 리턴한다는 것이다.

4. length() : 문자열의 길이 반환 (int)
   ex) String text = "text";
       System.out.print(text.length()); // 4

5. equals : 문자열을 비교 할 때 사용하는 메소드
   ex) a.equals(b)

6. substring(a,b) : 인덱스를 자를때 사용한다( a가 시작값, b는 종료값)
   ex) String str = "text";
        System.out.println(str.substring(0,3)); // tex

7. Math.max(x,y) : x, y 중 최대값
   Math.min(x,y) : x, y 중 최소값

8. integer.parselnt(x) : int 형을 리턴하기 때문에 산술 연산을 할 수 있다.
   ex) public int solution(String s)
        return Integer.parseInt(s);

9. int 배열 ( 상단에 imort java.util.Arrays; 를 적어야 됨)
   ex) int[] intArray = new int[] {1, 2, 3, 4, 5} -> (선언과 동시에 할당) or = new int[5] (선언만 한 것)
        System.out.println(Arrarys.toString(intArray));

